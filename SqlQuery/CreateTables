DROP TABLE IF EXISTS Messages CASCADE;
DROP TABLE IF EXISTS Players CASCADE;
DROP TABLE IF EXISTS Sessions CASCADE;
DROP TABLE IF EXISTS Roles CASCADE;
DROP TABLE IF EXISTS Users CASCADE;

CREATE TABLE Users (
    id SERIAL PRIMARY KEY,
    nickname VARCHAR(100) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(100) NOT NULL,
    isBanned BOOLEAN DEFAULT FALSE
);

CREATE TABLE Roles (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE,
    description TEXT
);

CREATE TABLE Sessions (
    id SERIAL PRIMARY KEY,
    host INT REFERENCES Users(id) ON DELETE CASCADE,
    title VARCHAR(100) NOT NULL,
    password VARCHAR(100),
    isPublic BOOLEAN DEFAULT TRUE,
    capacity INT NOT NULL,
    settings JSONB DEFAULT '[]',
    chat JSONB DEFAULT '[]'
);

CREATE TABLE Players (
    id SERIAL PRIMARY KEY,
    userId INT REFERENCES Users(id) ON DELETE CASCADE,
    sessionId INT REFERENCES Sessions(id) ON DELETE CASCADE,
    nickname VARCHAR(100) NOT NULL,
    roleId INT REFERENCES Roles(id),
    isAlive BOOLEAN DEFAULT TRUE
);

CREATE TABLE Messages (
    id SERIAL PRIMARY KEY,
    sessionId INT REFERENCES Sessions(id) ON DELETE CASCADE,
    playerId INT REFERENCES Players(id) ON DELETE CASCADE,
    message TEXT NOT NULL,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);